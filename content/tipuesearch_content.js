var tipuesearch = {"pages": [{'title': 'week', 'text': '', 'tags': '', 'url': 'week.html'}, {'title': 'week1~5', 'text': 'Week1 \n 建立個人倉儲cd2020 \n 1. 登入自己的github帳號，創建新的倉儲cd2020 2.輸入 git clone \xa0 https://github.com/s40723218/cd2020 \xa0複製 個人倉儲至資料夾 3.輸入git submodule add https://github.com/mdecourse/cmsimde.git 取得子模組資料。 4.將up_dir的所有項目複 製到cd2020裡面 5.完成後，python wsgi.py 開始編輯個人網站 6.編輯完成後即可git status \xa0 > \xa0 git add . \xa0 > \xa0 git commit -m "\xa0 \xa0 " \xa0\xa0 > \xa0 git push\xa0 \xa0 \n Week2 \n 1.在隨身系統下新增一個資料夾cd2020，並在cd2020下新建資料夾data，接著在data \n 下新增資料夾py382及 wscite432、portablegit 。 \n 2.進入 Python 官網。 \n 3.點選Downloads下的 Windows ，並點選 Latest Python 3 Release - Python 3.8.2 。 \n 4. Windows x86-64 executable installer 下載。 \n 5.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。 \n 6.下載SciTE系統\xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432。 \n 7.建立新的start.bat及stop.bat。 \n 8. 下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 \n 9. 下載PortableGit\xa0 64-bit Git for Windows Portable \xa0至\xa0 portablegit下。 \n 10 .安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 \n 11.執行指令 ，將python3.8.2版本缺少的模組下載下來。 \n Week3 \n 請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ \n 1.去網站 \xa0 http://mde.tw/cd2020/content/Grouping.html \n 2.點 \xa0 Dart source code for random grouping \n 3.去HTML更改為我們班的路徑 \n 4.點Run即完成亂數分組. \n 影片: \n', 'tags': '', 'url': 'week1~5.html'}, {'title': 'week6~9', 'text': 'week7 \n 練習用Vrep建立四輪車 \n 1.建立車子 \n 2.建立傳動軸 \n 3.設定馬達速度為20 \n 4.進行模擬 \n 5.再將完整的程式代入 \n 6.完成 \n 程式碼影片 \n https://drive.google.com/open?id=1hPSwv9J4h3P6Fh80I1mSVD3lKTEKo19z\xa0 \n week9 \n 期中考 \n', 'tags': '', 'url': 'week6~9.html'}, {'title': 'week10~14', 'text': '\n week10 \n gm用戶登入設置 \n 操作步驟: \n 1.先git clone cd2020pj1倉儲。 \n 2.建立新專案。 \n 3.點選啟用API和服務，點選Google+ Domains API並點選管理。 \n 4. 點選憑證及設定同意畫面 。 \n 5.點選憑證建立OAuth用戶端ID。 \n 6.設定來源及URL \n 7.將ID及密碼複製到編輯器，存儲在tmp下。 \n 8.開啟leo，並打開cd2020pj1.leo。 \n 9.將路徑及名稱改為自己的。 \n 10.存儲，並點選ROC。 \n 11.輸入pip install authomatic。 \n 12. 進入pj1，打開wsgi.py，即完成。 \n', 'tags': '', 'url': 'week10~14.html'}, {'title': 'week15~18', 'text': '', 'tags': '', 'url': 'week15~18.html'}, {'title': 'Assignment', 'text': '', 'tags': '', 'url': 'Assignment.html'}, {'title': 'Assignment1', 'text': '', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Random grouping', 'text': '請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ \n 1.去網站 \xa0 http://mde.tw/cd2020/content/Grouping.html \n 2.點 \xa0 Dart source code for random grouping \n 3.去HTML更改為我們班的路徑 \n 4.點Run即完成亂數分組. \n', 'tags': '', 'url': 'Random grouping.html'}, {'title': 'Portable system', 'text': '1.在隨身系統下新增一個資料夾cd2020，並在cd2020下新建資料夾data，接著在data \n 下新增資料夾py382及 wscite432、portablegit 。 \n 2.進入 Python 官網。 \n 3.點選Downloads下的 Windows ，並點選 Latest Python 3 Release - Python 3.8.2 。 \n 4. Windows x86-64 executable installer 下載。 \n 5.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。 \n 6.下載SciTE系統\xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432。 \n 7.建立新的start.bat及stop.bat。 \n 8. 下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 \n 9. 下載PortableGit\xa0 64-bit Git for Windows Portable \xa0至\xa0 portablegit下。 \n 10 .安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 \n 11.執行指令 ，將python3.8.2版本缺少的模組下載下來。 \n', 'tags': '', 'url': 'Portable system.html'}, {'title': 'four wheeled robot', 'text': 'https://www.coppeliarobotics.com/helpFiles/index.html 資料中 \n BubbleRob tutorial : \xa0 設計移動的機器人  。 \n Line following BubbleRob tutorial : \xa0 在本教程中， 調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。 \n External controller tutorial : \xa0 有好幾種方法可以控 制機器人或模擬。 \n', 'tags': '', 'url': 'four wheeled robot.html'}, {'title': 'Assignment2', 'text': '', 'tags': '', 'url': 'Assignment2.html'}, {'title': 'Topic 0', 'text': 'FlGMA: 這是一個協作優先的共享工作區工具。 Figma非常適合在 其中有多個人設計文件的相同區域。您可以觀看隊友設計 或在同一設計上一起工作實時。 \n MARVEL :這是一個適合與客戶溝通的地方，客戶也可以通過這裡察看進度。 \n Zeplin:是一個有用的傳遞工具，可讓開發人員深入了解設計的細節。工 作。 \n Quip:是集思廣益和產品 /過程文檔的絕佳平台。我們用它來記錄 並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對於集思廣益而不是視覺關注的新想法也很有用。於集思廣益而不是視覺關注的新想法也很有用。 \n 合作的過程 : \n 階段一:線框和自由討論 \n 階段二:如何設計產品和思考市場上的需求 \n 階段三:統整大家的方法，並確保達到客戶的標準 \n 階段四:客戶的反應和意見 \n 結論:協同真的很重要，它可以幫助我們更快完成目標也讓產品更加完善 。 \n', 'tags': '', 'url': 'Topic 0.html'}, {'title': 'Topic 1', 'text': 'Ch1  成功的設計 \n 第一章是在描述如何做出一個成功的設計，要進行設計前需要一個團隊，然後依照需要的東西決定隊伍的規模，然後依照產品的需求以及市場調查等等，去進行溝通與討論跟磨合。 \n Ch2  構建設計 \n 第二章是在說設計產品的流程，設計都將僅從產品構思開始。 \n Ch3 結構上的考量 \n 第三章主要講述產品的結構問題，主要分為材料強度、結構設計過程、需求分析、靜載荷、動態負載進而討論。 \n Ch4 材料與工藝 \n 第四章主要講述產品所需的最佳材料與工藝，產品若已經符合規格的要求，接著就必須考慮到設計的成本和材料進而去影響工藝。 \n', 'tags': '', 'url': 'Topic 1.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};